name: CD - Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (client secret)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Prepare manifests (use prod manifests)
        run: |
          mkdir -p k8s/_render
          cp -r k8s/production/deployments/* k8s/_render/

          SHA=${{ github.sha }}
          REG=${{ env.REGISTRY }}

          sed -i "s#image:\s*.*order-service:.*#image: ${REG}/order-service:${SHA}#g" k8s/_render/*.yaml
          sed -i "s#image:\s*.*product-service:.*#image: ${REG}/product-service:${SHA}#g" k8s/_render/*.yaml
          sed -i "s#image:\s*.*customer-service:.*#image: ${REG}/customer-service:${SHA}#g" k8s/_render/*.yaml

      - name: Ensure prod namespace exists
        run: kubectl get ns prod || kubectl create ns prod

      - name: Apply to prod
        run: kubectl apply -n prod -f k8s/_render

      - name: Wait for rollouts
        run: |
          for d in order-service product-service customer-service; do
            echo "Waiting for $d..."
            kubectl rollout status deploy/$d -n prod --timeout=300s
          done
